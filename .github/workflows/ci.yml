name: CI
on:
  push:
    branches:
    - master
    tags:
    - v*.*.*
  pull_request:
    branches:
    - master
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
jobs:
  unittest:
    strategy:
      matrix:
        go-version: [1.21.x, 1.22.x]
        os: [ubuntu-latest]
      fail-fast: true
    runs-on: ${{matrix.os}}
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v4
    - name: Set up Go 1.x
      uses: actions/setup-go@v5
      with:
        go-version: ${{matrix.go-version}}
    - name: Install tools
      run: make tools
    - name: Unittest
      run: gotestsum --junitfile report.xml --format pkgname --raw-command make test extend=-json
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v4
      if: always()
      with:
        report_paths: report.xml
    - name: Upload code coverage report
      if: ${{ matrix.os == 'ubuntu-latest' && matrix.go-version == '1.21.x' }}
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage-report
        path: coverage.txt
    - name: Benchmark
      run: make benchmark

  code-coverage:
    runs-on: ubuntu-latest
    needs: unittest
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v4
    - name: Download code coverage report
      uses: actions/download-artifact@v4
      with:
        name: code-coverage-report
    - name: Code Coverage Report
      uses: codecov/codecov-action@v4
      with:
        files: coverage.txt
        verbose: true
        flags: ${{ github.ref_name }}
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}

  auto-tag:
    runs-on: ubuntu-latest
    needs: unittest
    # https://docs.github.com/en/actions/learn-github-actions/contexts#context-availability
    # https://docs.github.com/en/actions/learn-github-actions/expressions
    if: ${{ github.ref == 'refs/heads/master' }}
    env:
      COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v4
    - run: |
        git config --global user.name "Github Action Bot"
        git config --global user.email "go-jimu@users.noreply.github.com"
        type=patch
        pattern="^Merge pull request #\d+ from go-jimu/release.*"
        if [[ $COMMIT_MESSAGE =~ $pattern ]]; then
          type=minor
        fi
        ./scripts/auto_bump_version.sh $type
        git push origin master --follow-tags
